import { FaCheckCircle, FaCheckDouble, FaEdit, FaEye, FaFileAlt } from "react-icons/fa";
import { SystemAction, SystemFeatures } from "../types";

// üîπ Object √°nh x·∫° gi·ªØa Enum & Text hi·ªÉn th·ªã
const SystemFeaturesTextMap: Record<SystemFeatures, string> = {
  [SystemFeatures.QuanLyNguoiDung]: "Qu·∫£n l√Ω ng∆∞·ªùi d√πng",
  [SystemFeatures.QuanLyVaiTro]: "Qu·∫£n l√Ω vai tr√≤",
  [SystemFeatures.QuanLyDonVi]: "Qu·∫£n l√Ω ƒë∆°n v·ªã",
  [SystemFeatures.QuanLyQuyen]: "Qu·∫£n l√Ω quy·ªÅn",
  [SystemFeatures.TroopReports]: "B√°o c√°o ƒë∆°n v·ªã",
  [SystemFeatures.ManagerRegisterLeave]: "Qu·∫£n l√Ω ƒëƒÉng k√Ω ngh·ªâ ph√©p",
  [SystemFeatures.ManagerGuardDutty]: "Qu·∫£n l√Ω ca g√°c",
  [SystemFeatures.ManagerDuttySetting]: "Thi·∫øt l·∫≠p ca g√°c",
  [SystemFeatures.ManagerPositions]: "Qu·∫£n l√Ω ch·ª©c v·ª•",
  [SystemFeatures.ManagerProgresses]: "Qu·∫£n l√Ω qu√° tr√¨nh",
  [SystemFeatures.ManagerDocuments]: "Qu·∫£n l√Ω t√†i li·ªáu",
  [SystemFeatures.ManagerTrainings]: "Qu·∫£n l√Ω ƒë√†o t·∫°o",
  [SystemFeatures.ManagerPersonalDiarys]: "Qu·∫£n l√Ω nh·∫≠t k√Ω c√° nh√¢n",
  [SystemFeatures.WorkCalendar]: "L·ªãch c√¥ng t√°c",
  [SystemFeatures.ManagerExperiences]: "Qu·∫£n l√Ω kinh nghi·ªám",
  [SystemFeatures.ManagerVehicle]: "Qu·∫£n l√Ω ph∆∞∆°ng ti·ªán",
  [SystemFeatures.RegisterVehicle]: "ƒêƒÉng k√Ω ph∆∞∆°ng ti·ªán",
  [SystemFeatures.VehicleCommand]: "L·ªánh ƒëi·ªÅu ph∆∞∆°ng ti·ªáng",
  [SystemFeatures.DeliveryBill]: "Phi·∫øu giao nh·∫≠n",
  [SystemFeatures.MeetingBook]: "S·ªï h·ªçp",
  [SystemFeatures.ManagerFuel]: "Qu·∫£n l√Ω nhi√™n li·ªáu",
  [SystemFeatures.ManagerWorkAddress]: "Qu·∫£n l√Ω ƒë·ªãa ch·ªâ l√†m vi·ªác",
  [SystemFeatures.ManagerTask]: "Qu·∫£n l√Ω c√¥ng vi·ªác",
  [SystemFeatures.ManagerTrackDiscipline]: "Qu·∫£n l√Ω theo d√µi k·ª∑ lu·∫≠t",
  [SystemFeatures.StatisticDocument]: "Th·ªëng k√™ t√†i li·ªáu",
  [SystemFeatures.ManagerTrackWork]: "Qu·∫£n l√Ω theo d√µi c√¥ng vi·ªác",
  [SystemFeatures.AccessControl]: "Ki·ªÉm so√°t truy c·∫≠p",
  [SystemFeatures.StatisticWebC86]: "Th·ªëng k√™ Web C86",
  [SystemFeatures.GoingCall]: "Cu·ªôc g·ªçi ƒëi",
  [SystemFeatures.InComingCall]: "Cu·ªôc g·ªçi ƒë·∫øn",
  [SystemFeatures.ManagerTypeBook]: "Qu·∫£n l√Ω lo·∫°i s√°ch",
  [SystemFeatures.KHHLCDNam]: "K·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u nƒÉm",
  [SystemFeatures.KHHLCDGD1]: "K·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u giai ƒëo·∫°n 1",
  [SystemFeatures.KHHLCDGD2]: "K·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u giai ƒëo·∫°n 2",
  [SystemFeatures.KHHLCDThang]: "K·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u th√°ng",
  [SystemFeatures.TTBHLCDTuan]: "Th√¥ng b√°o hu·∫•n luy·ªán chi·∫øn ƒë·∫•u tu·∫ßn",
  [SystemFeatures.MLHLCDNam]: "M·ªánh l·ªánh hu·∫•n luy·ªán chi·∫øn ƒë·∫•u nƒÉm",
  [SystemFeatures.HDKHHLCDNam]: "H∆∞·ªõng d·∫´n k·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u nƒÉm",
  [SystemFeatures.HDKHHLCDGD1]: "H∆∞·ªõng d·∫´n k·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u giai ƒëo·∫°n 1",
  [SystemFeatures.HDKHHLCDGD2]: "H∆∞·ªõng d·∫´n k·∫ø ho·∫°ch hu·∫•n luy·ªán chi·∫øn ƒë·∫•u giai ƒëo·∫°n 2",
  [SystemFeatures.TKHLCum]: "T·ªïng k·∫øt hu·∫•n luy·ªán c·ª•m",
  [SystemFeatures.TKHLTrungTam]: "T·ªïng k·∫øt hu·∫•n luy·ªán trung t√¢m",
  [SystemFeatures.TKHLBTL]: "T·ªïng k·∫øt hu·∫•n luy·ªán b·ªô t∆∞ l·ªánh",
  [SystemFeatures.BCHLTuan]: "B√°o c√°o hu·∫•n luy·ªán tu·∫ßn",
  [SystemFeatures.BCHLThang]: "B√°o c√°o hu·∫•n luy·ªán th√°ng",
  [SystemFeatures.BCHLQuy]: "B√°o c√°o hu·∫•n luy·ªán qu√Ω",
  [SystemFeatures.BCHL6Thang]: "B√°o c√°o hu·∫•n luy·ªán 6 th√°ng",
  [SystemFeatures.BCHL9Thang]: "B√°o c√°o hu·∫•n luy·ªán 9 th√°ng",
  [SystemFeatures.BCHLNam]: "B√°o c√°o hu·∫•n luy·ªán nƒÉm",
  [SystemFeatures.ThongQuaGiaoAn]: "Th√¥ng qua gi√°o √°n",
  [SystemFeatures.GiaoAnHuanLuyen]: "Gi√°o √°n hu·∫•n luy·ªán",
  [SystemFeatures.RutKinhNghiemHL]: "R√∫t kinh nghi·ªám hu·∫•n luy·ªán",
  [SystemFeatures.SoHocTapCaNhan]: "S·ªï h·ªçc t·∫≠p c√° nh√¢n",
  [SystemFeatures.EvaluateTraining]: "ƒê√°nh gi√° hu·∫•n luy·ªán",
  [SystemFeatures.ManagerObjectTraining]: "Qu·∫£n l√Ω ƒë·ªëi t∆∞·ª£ng hu·∫•n luy·ªán",
  [SystemFeatures.ManagerSystem]: "Qu·∫£n tr·ªã h·ªá th·ªëng",
};

export const getTextOfChucNang = (chucNang: SystemFeatures): string => {
  return SystemFeaturesTextMap[chucNang] || "Ch·ª©c nƒÉng kh√¥ng x√°c ƒë·ªãnh";
};

const SystemQuyenColorMap: Record<SystemAction, string> = {
  [SystemAction.View]: "#4CAF50",
  [SystemAction.Edit]: "#2196F3",
  [SystemAction.Approve]: "#00d83e",
  [SystemAction.Report]: "#f8d000",
  [SystemAction.UnitApprove]: "#eb0012"
};

export const getColorOfQuyen = (quyen: SystemAction) => {
  return SystemQuyenColorMap[quyen] || "#757575";
};

const SystemQuyenIconMap: Record<SystemAction, any> = {
  [SystemAction.View]: <FaEye />,
  [SystemAction.Edit]: <FaEdit />,
  [SystemAction.Approve]: <FaCheckCircle />,
  [SystemAction.Report]: <FaFileAlt />,
  [SystemAction.UnitApprove]: <FaCheckDouble />,
};

export const getIconOfQuyen = (quyen: SystemAction) => {
  return SystemQuyenIconMap[quyen] || <FaEye />; // M·∫∑c ƒë·ªãnh tr·∫£ v·ªÅ FaEye n·∫øu kh√¥ng t√¨m th·∫•y
};

export const getOptionsFromEnum = <T extends Record<string, string>>(
  enumObject: T,
  textMap: Record<T[keyof T], string>
): { value: string; label: string }[] => {
  return Object.values(enumObject).map((key) => ({
    value: key,
    label: textMap[key] || key, // N·∫øu kh√¥ng c√≥ trong textMap th√¨ d√πng key
  }));
};

export const SystemFeaturesOptions = getOptionsFromEnum(
  SystemFeatures,
  SystemFeaturesTextMap
);

export const SystemActionsTextMap: Record<SystemAction, string> = {
  [SystemAction.View]: "Xem",
  [SystemAction.Edit]: "S·ª≠a",
  [SystemAction.Approve]: "Duy·ªát",
  [SystemAction.Report]: "B√°o c√°o",
  [SystemAction.UnitApprove]: "Kh√¥ng duy·ªát"
};

export const getTextOfAction = (action: SystemAction): string => {
  return SystemActionsTextMap[action] || "H√†nh ƒë·ªông kh√¥ng x√°c ƒë·ªãng";
};

// üü¢ L·∫•y danh s√°ch options cho SystemActions
export const SystemActionsOptions = getOptionsFromEnum(
  SystemAction,
  SystemActionsTextMap
);
